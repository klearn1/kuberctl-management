/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
	v1 "k8s.io/code-generator/examples/apiserver/apis/core/v1"
	scheme "k8s.io/code-generator/examples/apiserver/clientset/versioned/scheme"
)

// MetaLessTestTypesGetter has a method to return a MetaLessTestTypeInterface.
// A group's client should implement this interface.
type MetaLessTestTypesGetter interface {
	MetaLessTestTypes(namespace string) MetaLessTestTypeInterface
}

// MetaLessTestTypeInterface has methods to work with MetaLessTestType resources.
type MetaLessTestTypeInterface interface {
	Create(ctx context.Context, metaLessTestType *v1.MetaLessTestType, opts metav1.CreateOptions) (*v1.MetaLessTestType, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.MetaLessTestType, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.MetaLessTestType, err error)
	MetaLessTestTypeExpansion
}

// metaLessTestTypes implements MetaLessTestTypeInterface
type metaLessTestTypes struct {
	*gentype.Client[*v1.MetaLessTestType]
}

// newMetaLessTestTypes returns a MetaLessTestTypes
func newMetaLessTestTypes(c *CoreV1Client, namespace string) *metaLessTestTypes {
	return &metaLessTestTypes{
		gentype.NewClient[*v1.MetaLessTestType](
			"metalesstesttypes",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1.MetaLessTestType { return &v1.MetaLessTestType{} }),
	}
}
